<% var TAB = '\t'; %>
<% if (schema.$ref) { %>
  <%- include('schema', {
    typeDef: typeDef,
    name: name, 
    schema: ref(schema.$ref, 'schema', srcStack),
    srcStack: srcStack.concat(schema.$ref) // update src stack if has $ref
  }); %>
<% } else { %>
  <%/* Display Schema */%>
  <nop>
    <%= typeDef _%>
    <%_ if (name) { %> `<%= name %>` <% } %> &nbsp;

    _(
    <%/* Enum */%>
    <%_ if (schema.enum) { _%>
      <%_ %> enum <% if (schema.type) { %> : <%= schema.type %> <% } %>
    <% _} else { _%>
      <%_ if (schema._custom) { _%>
        [<%= schema._custom.type %>](<%= schema._custom.path %>)
      <%_ } else { _%>
        <%= schema.type %>
      <%_ } _%>
    <%_ } _%>

    <%/* Type format */%>
    <%_ if (schema.format) { _%>
      <%_ %> {$<%= schema.format %>}
    <%_ } %> )_ 

    <%_ if (schema.description) { _%> 
      <%_ %> <small style="font-weight:normal;"> - <%= schema.description %></small> 
    <%_ } _%>
  </nop>
<% } %> 
<%/* Recursive if schema's type is object or array */%>
<% if (schema.type == 'object') { %>
  <% schema.properties && Object.keys(schema.properties).forEach(function(key) { %>
    <%- include('schema', {
      typeDef: /#{1,6}/.test(typeDef) ? '-' : '\t' + typeDef,
      name: key, 
      schema: schema.properties[key],
      srcStack: srcStack
    }); %>
  <% }) %>
<% } else if (schema.type == 'array') { %>
  <%- include('schema', {
    typeDef: /#{1,6}/.test(typeDef) ? '-' : '\t' + typeDef,
    name: 'items', 
    schema: schema.items,
    srcStack: srcStack
  }); %>
<% } %>
<%/* Define enum if need */%>
<% if (typeof schema.enum === 'object' && schema.enum) { %>
  <% if (Array.isArray(schema.enum)) { %>
    <% schema.enum.forEach(function(value) { %>
      <nop>
        <%= TAB %><%= typeDef %> <%= value %>
      </nop>
    <% }) %>
  <% } else { %>
    <%/* Enum object define support */%>
    <% Object.keys(schema.enum).forEach(function(key) { %>
      <nop>
        <%= TAB %><%= typeDef %> <%= key %> - <small><%= schema.enum[key] %></small>
      </nop>
    <% }) %>
  <% } %>
<% } %>